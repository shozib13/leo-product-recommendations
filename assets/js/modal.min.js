/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/js/modal.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/modal.js":
/*!****************************!*\
  !*** ./assets/js/modal.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function ($, __) {
  //setup cart items in localstorage to exclude from recommendation
  function lpr_cart_items() {
    $.ajax({
      method: "GET",
      url: lc_ajax_modal.url,
      data: {
        action: "lc_get_cart_items",
        nonce: lc_ajax_modal.nonce
      }
    }).done(function (data) {
      localStorage.setItem("lpr_cart_items", data);
    });
  }

  lpr_cart_items();
  $(document.body).on("added_to_cart removed_from_cart wc_fragments_refreshed", function () {
    lpr_cart_items();
  }); //modal plugin

  $.fn.lprModal = function (options) {
    var settings = $.extend({
      action: "open" // opton for modal open or close default: open

    }, options);
    var that = this; // modal overlay

    var overlay = $('<div class="lpr-modal-overlay show"></div>'); // opne modal

    function opneModal() {
      $('body').trigger('before_open_lpr_modal'); // event before modal open

      var scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
      that.addClass("show");
      $("body").css("paddingRight", scrollbarWidth);
      $("body").addClass("lpr-modal-opened").prepend(overlay);
      setTimeout(function () {
        that.addClass("fadeIn");
        overlay.addClass("fadeIn");
      }, 10);
      return false;
    } // close modal


    function closeModal() {
      that.removeClass("fadeIn");
      $(".lpr-modal-overlay").addClass("fadeIn");
      setTimeout(function () {
        that.removeClass("show");
        $(".lpr-modal-overlay").remove();
        $("body").css("paddingRight", 0);
        $("body").removeClass("lpr-modal-opened");
      }, 200);
      $('body').trigger('after_close_lpr_modal'); //event after modal close
    } // call modal open


    if (settings.action === "open") {
      opneModal();
    } // call modal close


    if (settings.action === "close") {
      closeModal();
    }

    that.find(".lpr-modal-close, .lpr-close-modal").click(function (e) {
      closeModal();
      return false;
    });
    $(".lpr-modal").click(function (e) {
      if (this === e.target) {
        closeModal();
      }
    });
  };

  $(function () {
    // call modal
    $(document.body).on("added_to_cart", function (e) {
      for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        data[_key - 1] = arguments[_key];
      }

      var buttonInfo = data[2];
      var button = buttonInfo[0];
      var addedProductId = $(button).data("product_id"); //if don't find product id from button data

      if (!addedProductId && $(button).closest('form').length) {
        addedProductId = $(button).closest('form').find('[name="add-to-cart"]').val();
      } //don't show modal inside modal


      if (!$(button).closest(".recommended-products-wrapper").length) {
        var modalId = "#lpr-modal-" + addedProductId;
        var $modal = $(modalId);

        if ($modal.length) {
          var $preloader = $modal.find(".loading-products");
          var $recommendationProductsWrapper = $modal.find(".recommended-products-wrapper");
          var recommendationProducts = $recommendationProductsWrapper.data("recommendation-ids");

          if (recommendationProducts) {
            recommendationProducts = recommendationProducts.toString();
            recommendationProducts = recommendationProducts.split(",").map(Number);
          }

          var addedProducts = localStorage.getItem("lpr_cart_items");

          if (addedProducts) {
            addedProducts = addedProducts.split(",").map(Number);
            recommendationProducts = recommendationProducts.filter(function (id) {
              return addedProducts.indexOf(id) < 0;
            });
          } // return if all recommendation product are already in cart


          if (!recommendationProducts.length) return;
          $('body, .quickview-wrapper .closeqv, .yith-quick-view-overlay, .mfp-wrap').click(); // to hide existing popup, quick view, etc

          $modal.lprModal();
          $preloader.show();
          $.ajax({
            method: "GET",
            url: lc_ajax_modal.url,
            data: {
              action: "fetch_modal_products",
              nonce: lc_ajax_modal.nonce,
              recommendation_items: recommendationProducts,
              layout_type: lc_ajax_modal.layout_type,
              variable_add_to_cart: lc_ajax_modal.variable_add_to_cart
            }
          }).done(function (data) {
            $preloader.hide();

            if (lc_ajax_modal.layout_type === "slider") {
              var owl = $modal.find(".recommended-products-slider").trigger("replace.owl.carousel", data);
              $total_items = owl.data('owl.carousel')._items.length;
              $visible_items = owl.data('owl.carousel').options.items;
              owl.data('owl.carousel').options.loop = owl.data('owl.carousel').options.loop && $total_items > $visible_items;
              owl.trigger("refresh.owl.carousel");
            } else {
              $recommendationProductsWrapper.html(data);
            }

            setTimeout(function () {
              //mesasge animation
              $modal.find('.message-text').addClass('lpr__animated animate__lpr_headShake');
            }, 200); //verialbe product swatch

            setTimeout(function () {
              $('.lpr-modal .variations_form').each(function () {
                $(this).wc_variation_form();
              }); // woodmart theme veriation swatch

              if (window.woodmartThemeModule && woodmartThemeModule.swatchesVariations) {
                woodmartThemeModule.swatchesVariations();
              }

              $modal.find('.modal-heading').addClass('lpr__animated animate__lpr_headShake');
              $modal.find('.modal-heading-article').addClass('lpr__animated animate__lpr_headShake');
            }, 700);
          });
        }
      } else {
        var $productHeading = $(button).closest('.single-lpr').find('.woocommerce-loop-product__title'); //show notification for added product.

        var notificationText = $productHeading.length ? "".concat($productHeading.text(), " ").concat(__('has been added to cart.', 'leo-product-recommendations')) : __('Item has been added to cart.', 'leo-product-recommendations');
        var topPosition = $(button).closest('.lpr-modal').find('.lpr-message').outerHeight();
        $notification_bar = $(button).closest('.lpr-modal').find('.lpr-purchase-notification');
        $notification_bar.css('top', topPosition).fadeIn(300).text(notificationText);
        setTimeout(function () {
          $notification_bar.fadeOut(600);
        }, 1500);
      }
    });
  });
})(jQuery, wp.i18n.__);

/***/ })

/******/ });
//# sourceMappingURL=modal.min.js.map